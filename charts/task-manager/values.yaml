ingress:
autoscaling:
nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []

serviceAccount:
  create: false
  annotations: {}
  name: ""

backend:
  replicaCount: 1
  image:
    repository: task-manager-backend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5000
  env:
    MYSQL_HOST: mysql
    MYSQL_PORT: "3306"
    MYSQL_USER: root
    MYSQL_DB: tasks_db
    REDIS_HOST: redis
    REDIS_PORT: "6379"
    FE_HOST: localhost:8080
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

frontend:
  replicaCount: 1
  image:
    repository: task-manager-frontend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: NodePort
    port: 80
    nodePort: 30080
  env:
    API_URL: ""
    INTERNAL_BACKEND_HOST: ""
    INTERNAL_BACKEND_PORT: "5000"
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

mysql:
  replicaCount: 1
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  rootPassword: secret
  user: root
  password: secret
  database: tasks_db
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    storageClass: ""
  resources: {}

redis:
  replicaCount: 1
  image:
    repository: redis
    tag: 7-alpine
    pullPolicy: IfNotPresent
  port: 6379
  resources: {}